// <auto-generated />
using System;
using BuzzerWolf.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuzzerWolf.Migrations
{
    [DbContext(typeof(BuzzerWolfContext))]
    [Migration("20231130005404_SyncTrackingTable")]
    partial class SyncTrackingTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("BuzzerWolf.Models.Profile", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("SecondTeam")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TeamId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("BuzzerWolf.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("Finish")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("BuzzerWolf.Models.Sync", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataTable")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("LastSync")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("NextAutoSync")
                        .HasColumnType("TEXT");

                    b.HasKey("TeamId", "DataTable");

                    b.ToTable("Sync");
                });
#pragma warning restore 612, 618
        }
    }
}
